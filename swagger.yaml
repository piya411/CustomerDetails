swagger: "2.0"
info: 
  description: "This is a customer API.  The API is used to,
    1. Create customer record in the organisation
    2. Update the existing customer record
    3. Fetch customer details by name/id
    4. Delete the customer record"
  version: "1.0.0"
  title: "Customer Rest API"
host: "localhost:8080"
basePath: "/"
tags: 
- name: "customer-controller"
  description: "Customer Controller"
paths: 
  /customer/: 
    post: 
      tags: 
      - "customer-controller"
      summary: "Create a customer with the provided details"
      operationId: "createCustomerUsingPOST"
      consumes: 
      - "application/json"
      produces: 
      - "application/json"
      parameters: 
      - in: "body"
        name: "customer"
        description: "customer"
        required: true
        schema: 
          $ref: "#/definitions/Customer"
      responses: 
        200: 
          description: "OK"
          schema: 
            $ref: "#/definitions/ApiResponseOfCustomer"
        201: 
          description: "Created"
        401: 
          description: "Unauthorized"
        403: 
          description: "Forbidden"
        404: 
          description: "Not Found"
      deprecated: false
    put: 
      tags: 
      - "customer-controller"
      summary: "Update an existing customer"
      operationId: "updateCustomerUsingPUT"
      consumes: 
      - "application/json"
      produces: 
      - "application/json"
      parameters: 
      - in: "body"
        name: "customer"
        description: "customer"
        required: true
        schema: 
          $ref: "#/definitions/Customer"
      responses: 
        200: 
          description: "OK"
          schema: 
            $ref: "#/definitions/ApiResponse"
        201: 
          description: "Created"
        401: 
          description: "Unauthorized"
        403: 
          description: "Forbidden"
        404: 
          description: "Not Found"
      deprecated: false
  /customer/{customerId}: 
    get: 
      tags: 
      - "customer-controller"
      summary: "Find customer by ID "
      operationId: "getCustomerDetailsUsingGET"
      produces: 
      - "application/json"
      parameters: 
      - name: "customerId"
        in: "path"
        description: "customerId"
        required: true
        type: "string"
      responses: 
        200: 
          description: "OK"
          schema: 
            $ref: "#/definitions/ApiResponse"
        401: 
          description: "Unauthorized"
        403: 
          description: "Forbidden"
        404: 
          description: "Not Found"
      deprecated: false
    delete: 
      tags: 
      - "customer-controller"
      summary: "Delete the details for the customer"
      operationId: "deleteCustomerUsingDELETE"
      produces: 
      - "application/json"
      parameters: 
      - name: "customerId"
        in: "path"
        description: "customerId"
        required: true
        type: "string"
      responses: 
        200: 
          description: "OK"
          schema: 
            $ref: "#/definitions/ApiResponse"
        204: 
          description: "No Content"
        401: 
          description: "Unauthorized"
        403: 
          description: "Forbidden"
      deprecated: false
definitions: 
  ApiResponse: 
    type: "object"
    properties: 
      data: 
        type: "object"
      error: 
        $ref: "#/definitions/ApplicationError"
    title: "ApiResponse"
  ApiResponseOfCustomer: 
    type: "object"
    properties: 
      data: 
        $ref: "#/definitions/Customer"
      error: 
        $ref: "#/definitions/ApplicationError"
    title: "ApiResponse«Customer»"
  ApplicationError: 
    type: "object"
    properties: 
      code: 
        type: "string"
      message: 
        type: "string"
      traceId: 
        type: "string"
    title: "ApplicationError"
  Customer: 
    type: "object"
    required: 
    - "address"
    - "dob"
    - "email"
    - "firstName"
    - "lastName"
    properties: 
      address: 
        type: "array"
        items: 
          $ref: "#/definitions/CustomerAddress"
      dob: 
        type: "string"
        example: "10/6/1970"
      email: 
        type: "string"
        example: "martin.b@gmail.com"
      firstName: 
        type: "string"
        example: "Martin"
      id: 
        type: "string"
      lastName: 
        type: "string"
        example: "Brook"
    title: "Customer"
  CustomerAddress: 
    type: "object"
    properties: 
      address: 
        type: "string"
        description: "address details"
      addressType: 
        type: "string"
        description: "type of address"
        enum: 
        - "postal"
        - "domicile"
        - "residential"
        - "official"
    title: "CustomerAddress"